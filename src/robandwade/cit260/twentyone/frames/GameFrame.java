/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package robandwade.cit260.twentyone.frames;
import twentyone.Game;
import twentyone.TwentyOne;

/**
 *
 * @author RFord
 */
public class GameFrame extends javax.swing.JFrame {

    int playerScore = 0;
    int dealerScore = 0;
    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePanel = new javax.swing.JPanel();
        playerPanel = new javax.swing.JPanel();
        playerLabel = new javax.swing.JLabel();
        pHandLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        dealerLabel = new javax.swing.JLabel();
        dHandLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        dStatusLabel = new javax.swing.JLabel();
        gStatusLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        hitButton = new javax.swing.JButton();
        standButton = new javax.swing.JButton();
        dealButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playerLabel.setText("Player1");

        pHandLabel.setText("Player's Hand");

        javax.swing.GroupLayout playerPanelLayout = new javax.swing.GroupLayout(playerPanel);
        playerPanel.setLayout(playerPanelLayout);
        playerPanelLayout.setHorizontalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(playerLabel))
                    .addGroup(playerPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(pHandLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        playerPanelLayout.setVerticalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pHandLabel)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        dealerLabel.setText("Dealer");

        dHandLabel.setText("Dealer's Hand");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dealerLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(dHandLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dealerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dHandLabel)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        statusLabel.setText("Player Status");

        dStatusLabel.setText("Dealer Status");

        gStatusLabel.setText("Game Status");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusLabel)
                    .addComponent(dStatusLabel)
                    .addComponent(gStatusLabel))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusLabel)
                .addGap(18, 18, 18)
                .addComponent(dStatusLabel)
                .addGap(18, 18, 18)
                .addComponent(gStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hitButton.setText("Hit");
        hitButton.setEnabled(false);
        hitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitButtonActionPerformed(evt);
            }
        });

        standButton.setText("Stand");
        standButton.setEnabled(false);
        standButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standButtonActionPerformed(evt);
            }
        });

        dealButton.setText("Deal");
        dealButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dealButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(hitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(standButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(dealButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dealButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(hitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(standButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(81, 81, 81))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addComponent(playerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitButtonActionPerformed
        hit();
        this.pHandLabel.setText(TwentyOne.myHand.returnHand()); 
        playerScore = TwentyOne.myHand.checkValue(); 
        System.out.println("playerScore: "+ playerScore + "\tdealerScore: "+ dealerScore);
        if (TwentyOne.myHand.checkValue() > 21){
            this.statusLabel.setText("You have Busted!");                        
            hitButton.setEnabled(false);
            standButton.setEnabled(false);
         
            Dealer();
            this.gStatusLabel.setText(displayResults());
            dealButton.setEnabled(true);
        } else if (TwentyOne.myHand.checkValue() == 21){
            this.statusLabel.setText("Player has 21!");                        
            hitButton.setEnabled(false);
            standButton.setEnabled(false);
            
            Dealer();
            this.gStatusLabel.setText(displayResults());
            dealButton.setEnabled(true);            
        } else this.statusLabel.setText("The Value of Your Hand is " + TwentyOne.myHand.checkValue() + "\n");

    }//GEN-LAST:event_hitButtonActionPerformed

    private void dealButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dealButtonActionPerformed
          this.statusLabel.setText("Shuffling");
          this.gStatusLabel.setText("");
          this.dStatusLabel.setText("");
          this.dHandLabel.setText("");
          this.pHandLabel.setText("");
          hitButton.setEnabled(true);
          standButton.setEnabled(true);
          dealButton.setEnabled(false);
            TwentyOne.myHand.initHand();
            this.pHandLabel.setText(TwentyOne.myHand.returnHand());                
            int check = TwentyOne.myHand.checkValue();
            if (check == 21) {
                this.statusLabel.setText("21 you win!");
                }           
            this.statusLabel.setText("The Value of Your Hand is " + TwentyOne.myHand.checkValue() + "\n");
            playerScore = TwentyOne.myHand.checkValue(); 
            System.out.println("playerScore: "+ playerScore + "\tdealerScore: "+ dealerScore);
            
    }//GEN-LAST:event_dealButtonActionPerformed

    private void standButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standButtonActionPerformed
        this.pHandLabel.setText(TwentyOne.myHand.returnHand()); 
        this.statusLabel.setText("Player Holds " + TwentyOne.myHand.checkValue() + "\n");
        playerScore = TwentyOne.myHand.checkValue(); 
        System.out.println("playerScore: "+ playerScore + "\tdealerScore: "+ dealerScore);
        hitButton.setEnabled(false);
        standButton.setEnabled(false);
        Dealer();
        this.gStatusLabel.setText(displayResults());
        dealButton.setEnabled(true);
        
    }//GEN-LAST:event_standButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
                hitButton.setVisible(false);
                standButton.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JLabel dHandLabel;
    private javax.swing.JLabel dStatusLabel;
    private javax.swing.JButton dealButton;
    private javax.swing.JLabel dealerLabel;
    private javax.swing.JLabel gStatusLabel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton hitButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel pHandLabel;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JPanel playerPanel;
    private javax.swing.JButton standButton;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
    public void hit(){
        TwentyOne.myHand.addCard();

    }
    public String Dealer() {

        String dealerHand = "";
        TwentyOne.myHand.initHand();
        this.dHandLabel.setText(TwentyOne.myHand.returnHand());

        if (TwentyOne.myHand.checkValue() == 21) {
            this.dStatusLabel.setText("Dealer holds 21");
            }
            else if (TwentyOne.myHand.checkValue() > 17) {
            this.dStatusLabel.setText("Dealer holds " + TwentyOne.myHand.checkValue());
            }
            else while (TwentyOne.myHand.checkValue() <= 17) {
                TwentyOne.myHand.addCard();
                this.dHandLabel.setText(TwentyOne.myHand.returnHand());
                this.dStatusLabel.setText("Dealer Shows " + TwentyOne.myHand.checkValue());
                if (TwentyOne.myHand.checkValue() > 21) {
                    this.dStatusLabel.setText("Dealer Busts ");
                }             
            }
            dealerHand = TwentyOne.myHand.returnHand();
            dealerScore = TwentyOne.myHand.checkValue();
                    System.out.println("playerScore: "+ playerScore + "\tdealerScore: "+ dealerScore);
    return dealerHand;   
    }    
    public String displayResults() {
        String results = "";

        if (dealerScore > 21) {dealerScore = 0;}
        if (playerScore > 21) {playerScore = 0;}

            if (playerScore < dealerScore){
                results = "I am sorry, you have lost.";
            } else if (playerScore > dealerScore){
                results =  "Congratulations! You have won.";
            } else if (playerScore == dealerScore){
                results = "It is a tie.";
          
            
        }return results;
    }
}
